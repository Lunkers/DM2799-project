{"version":3,"sources":["logo.svg","Data/tasks.js","Contexts/TimeContext.js","Components/TaskScheduleComponent.jsx","Components/ScheduleComponent.jsx","Components/BarChart.jsx","Components/SunburstComponent.jsx","Components/LoadingBarComponent.jsx","Components/VizView.jsx","Components/likert-component.jsx","Components/ReportComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["tasks","Research","Design","Programming","Testing","TimeContext","React","createContext","TimeProvider","props","useState","scheduled","setScheduled","reported","setReported","provided","addScheduledTime","schedule","scheduledWork","map","item","hours","task","quarters","addReportedTime","reports","newReports","report","startMoment","moment","startTime","endMoment","endTime","duration","diff","Math","round","asHours","removeScheduledTime","id","filter","time","removeReportedTime","getReportedTimesBasedOnTask","grouped","d3","v","d","console","log","getReportedAndScheduledReduced","type","r","s","getTaskBasedScheduledAndReported","groupedScheduled","Object","fromEntries","groupedReported","reportedOrScheduledTasks","Set","keys","getCategoryGroupedTaskTimes","retObj","children","taskCategories","groupedWithName","key","name","value","category","tasksInCategory","reportedInCategory","includes","catRetObj","length","Provider","TaskScheduleComponent","addTime","inputHours","setHours","className","onChange","e","target","min","defaultValue","style","width","ScheduleComponent","useContext","localScheduled","setLocalScheduled","reduce","obj","hiddenState","setHiddenState","useEffect","onChangeSchedule","index","findIndex","newScheduleItem","scheduleCopy","getScheduledTimeForTask","scheduledTimes","scheduledObj","find","Consumer","onClick","message","success","UpOutlined","DownOutlined","dataSource","grade","dueDate","columns","title","dataIndex","BarChart","SunburstComponent","widthHeightValue","data","margin","height","d3Container","useRef","current","radius","color","selectAll","remove","g","append","attr","partition","size","PI","dataroot","sum","arc","startAngle","x0","endAngle","x1","innerRadius","y0","outerRadius","y1","descendants","enter","depth","parent","on","i","this","transition","text","centroid","angle","computeTextRotation","ref","LoadingBarComponent","stacked","loadingBarContainer","scheduledData","reportedData","svg","scale","domain","nice","range","axis","ticks","t","tickFormat","call","VizComponent","LikertScaleComponent","question","score","selected","setSelected","FrownOutlined","fontSize","MehOutlined","SmileOutlined","RangePicker","TimePicker","DropdownMenu","Menu","SubMenu","onTreeChange","cat","selectable","ReportComponent","showModal","setShowModal","Date","selectedDate","setSelectedDate","setReports","rollingIdx","setRollingIdx","onDateSelect","date","toDate","reportedWithId","idx","onOk","onCancel","getReportsFordate","momentDate","isSame","dateCellRender","reportsForDate","sort","a","b","display","backgroundColor","marginBottom","borderRadius","whiteSpace","textOverflow","overflow","format","onSelect","visible","toLocaleDateString","dates","garbage","newReport","reportCopy","changeTaskTime","changeReportTask","changeReportReflection","App","basename","mode","defaultSelectedKeys","Item","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381504dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\nconst tasks = {\n    \"Project Management\": [\n        \"Coordinated Meetings\",\n        \"Created Slides\",\n        \"Presented\",\n        \"Met with partners to discuss offers\",\n        \"Coordinated Communication\",\n        \"Managed the project\"\n    ],\n    Research:[\n        \"Researched related work\",\n        \"Brainstorming\",\n        \"Researched Tools\",\n        \"Worked out the mathematics and statistics\",\n        \"Researched API to raw data\",\n\n    ],\n    \"Data Management\":[\n        \"Gathered raw data\",\n        \"Processed raw data\",\n        \"Created data model\"\n    ],\n    Design: [\n        \"Designed visual structures\",\n        \"Created visual designs and aestethics\",\n        \"Designed visual mappings\",\n        \"Designed view transformations\",\n    ],\n    Programming: [\n        \"Created webpage\",\n        \"Programmed front end\",\n        \"Programmed back end\",\n        \"Maintained the Github repository\",\n    ],\n    Testing: [\n        \"Tested visual structures\",\n        \"Tested view transformations\",\n    ],\n    \"User Testing\": [\n        \"Recruited participants for user testing\",\n        \"Designed user tests\",\n        \"Executed user tests\"\n    ]\n}\nexport default tasks","import React, { useState } from 'react';\nimport tasks from '../Data/tasks';\nimport moment from 'moment';\nimport * as d3 from 'd3';\n\nexport const TimeContext = React.createContext()\n\nfunction TimeProvider(props) {\n    //some default states for testing purposes\n    const [scheduled, setScheduled] = useState([])\n    const [reported, setReported] = useState([])\n    const [index, setIndex] = useState(1);\n    const getTaskBasedScheduledAndReported =() => {\n        const groupedScheduled = Object.fromEntries(d3.rollup(scheduled, v => d3.sum(v, d=>d.quarters), d => d.task))\n        const groupedReported = Object.fromEntries(d3.rollup(reported, v => d3.sum(v, d=>d.quarters), d => d.task))\n        const reportedOrScheduledTasks = new Set([...Object.keys(groupedReported), ...Object.keys(groupedScheduled)])\n        \n        const groupedCompArr = [...reportedOrScheduledTasks].map(v => ({\n            task: v, \n            reported: groupedReported[v] ? groupedReported[v] : 0,\n            scheduled: groupedScheduled[v] ? groupedScheduled[v] : 0\n        }))\n        console.log(groupedCompArr)\n        return groupedCompArr\n    }\n    const provided = {\n        scheduled,\n        reported,\n        addScheduledTime: (schedule) => {\n            const scheduledWork = schedule.map(item => ({\n                hours: item.hours,\n                task: item.task,\n                quarters: item.hours * 4\n            }))\n            setScheduled(scheduledWork) //overwrite at the moment, why the fuck not?\n            //setIndex(index + 1);\n        },\n        addReportedTime: (reports) => {\n            const newReports = reports.map(report => {\n                //let [startTime, endTime] = startTime < endTime ? [startTime, endTime] : [endTime, startTime] //make sure earliest time is always first\n                const startMoment = moment(report.startTime);\n                const endMoment = moment(report.endTime);\n                const duration = moment.duration(endMoment.diff(startMoment))\n                const quarters = Math.round(duration.asHours() * 4)\n                report.quarters = quarters\n                return report\n            })\n            //console.log(reported)\n            setReported(newReports)\n        },\n        removeScheduledTime: ({ id }) => {\n            //[startTime, endTime] = startTime < endTime ? [startTime, endTime] : [endTime, startTime] //make sure earliest time is always first\n            setScheduled(scheduled.filter(time => !(time.id === id)))\n        },\n        removeReportedTime: ({ startTime, endTime, task }) => {\n            [startTime, endTime] = startTime < endTime ? [startTime, endTime] : [endTime, startTime] //make sure earliest time is always first\n            setScheduled(scheduled.filter(time => time.startTime === startTime && time.endTime === endTime && time.task === task))\n        },\n        getReportedTimesBasedOnTask:() => {\n            // Get reported time grouped on a task basis\n            const grouped = d3.rollup(reported, v => d3.sum(v, d=>d.quarters), d => d.task )\n            console.log(grouped)\n            return grouped;\n        },\n        getReportedAndScheduledReduced:() =>{\n            const reportedSum = d3.sum(reported, r => r.quarters)\n            const scheduledSum = d3.sum(scheduled, s => s.quarters)\n\n            return {reported: {type: \"Reported\", quarters: reportedSum}, scheduled: {type: \"Scheduled\", quarters: scheduledSum}}\n        },\n        getTaskBasedScheduledAndReported:() => {\n            const groupedScheduled = Object.fromEntries(d3.rollup(scheduled, v => d3.sum(v, d=>d.quarters), d => d.task))\n            const groupedReported = Object.fromEntries(d3.rollup(reported, v => d3.sum(v, d=>d.quarters), d => d.task))\n            const reportedOrScheduledTasks = new Set([...Object.keys(groupedReported), ...Object.keys(groupedScheduled)])\n            \n            const groupedCompArr = [...reportedOrScheduledTasks].map(v => ({\n                task: v, \n                reported: groupedReported[v] ? groupedReported[v] : 0,\n                scheduled: groupedScheduled[v] ? groupedScheduled[v] : 0\n            }))\n            return groupedCompArr\n        },\n        getCategoryGroupedTaskTimes:() => {\n            let retObj = {\n                \"name\": \"categories\",\n                children: []\n            }\n            const taskCategories = Object.keys(tasks);\n\n            //for some reason i can't reference the other function, I'll just copy paste to save time lmao\n            const groupedReported = Object.fromEntries(d3.rollup(reported, v => d3.sum(v, d=>d.quarters), d => d.task))\n\n            const groupedWithName = Object.keys(groupedReported).map(key => (\n                {\n                    name: key,\n                    value: groupedReported[key],\n                    children: []\n                }\n            ))\n            // beautiful nested for-loop: O(n^3) is not dangerous\n            taskCategories.map(category => {\n                const tasksInCategory = tasks[category]\n                \n                const reportedInCategory = groupedWithName.filter(r => tasksInCategory.includes(r.name))\n                const catRetObj = {\n                    \"name\": category,\n                    //\"value\": reportedInCategory ? d3.sum(reportedInCategory, report => report.value): 0,\n                    \"children\": reportedInCategory\n                } \n                console.log(reportedInCategory);\n                if (catRetObj.children.length > 0) retObj.children = [...retObj.children, catRetObj]\n            })\n            console.log(retObj);\n            return retObj;\n        }\n\n    };\n    return (\n        <TimeContext.Provider value={provided}>\n            {props.children}\n        </TimeContext.Provider>\n    );\n};\n\nexport default TimeProvider;","import React, {useState} from 'react';\nimport './ScheduleComponent.css';\nimport {Input, Button} from 'antd';\n\nconst TaskScheduleComponent = ({addTime, task, inputHours}) => {\n    const [hours, setHours] = useState(inputHours)\n\n    return (\n        <div className=\"schedule-task-container\">\n            \n            <div>\n                {task}\n            </div>\n            <div>\n                <Input onChange={(e) => {\n                    setHours(e.target.value)\n                    addTime(task, e.target.value)\n                }} min={0} defaultValue={hours} style={{width:\"5rem\"}}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default TaskScheduleComponent;","\nimport React, { useContext, useEffect, useState } from 'react';\nimport { TimeContext } from '../Contexts/TimeContext';\nimport { Button, Divider, Table, message, Affix } from 'antd'\nimport tasks from '../Data/tasks';\nimport TaskScheduleComponent from './TaskScheduleComponent';\nimport './ScheduleComponent.css';\nimport {\n    UpOutlined,\n    DownOutlined\n} from '@ant-design/icons'\n\nconst ScheduleComponent = () => {\n    const { scheduled } = useContext(TimeContext)\n    const [localScheduled, setLocalScheduled] = useState(scheduled)\n    const [hiddenState, setHiddenState] = useState(\n        Object.keys(tasks).reduce((obj, category) => ({\n            ...obj,\n            [category]: false,\n            \"Project Management\": true,\n        }), {})\n    )\n\n    // load scheduled times into local state\n    useEffect(() => {\n        setLocalScheduled(scheduled);\n    },[scheduled])\n\n    const deliverables = [\n        {\n            key: '1',\n            name: 'Visualizing Group Matching',\n            grade: \"10%\",\n            type: \"Individual\",\n            dueDate: \"Jan 20\"\n        },\n        {\n            key: '2',\n            name: 'World values survey visualization',\n            grade: \"30%\",\n            type: \"Individual\",\n            dueDate: \"Jan 29\"\n        },\n        {\n            key: '3',\n            name: 'Project proposal',\n            grade: \"10%\",\n            type: \"Group\",\n            dueDate: \"Feb 8\"\n        },\n        {\n            key: '4',\n            name: 'Hello world demo',\n            grade: \"15%\",\n            type: \"Group\",\n            dueDate: \"Feb 14\"\n        }\n    ]\n\n    const columns = [\n        {\n            title: \"Assignment\",\n            dataIndex: \"name\",\n            key: \"name\"\n        },\n        {\n            title: \"Type\",\n            dataIndex: \"type\",\n            key: \"type\"\n        },\n        {\n            title: \"Grade %\",\n            dataIndex: \"grade\",\n            key: \"grade\"\n        },\n        {\n            title: \"Due date\",\n            dataIndex: \"dueDate\",\n            key: \"dueDate\"\n        }\n    ]\n\n    const onChangeSchedule = (task, hours) => {\n        const index = localScheduled.findIndex(item => item.task === task)\n        console.log(index)\n        if (index >= 0) {\n            //task is already scheduled, change it\n            const newScheduleItem = {\n                ...localScheduled[index],\n                hours: hours\n            }\n            let scheduleCopy = [...localScheduled]\n            scheduleCopy[index] = newScheduleItem\n            setLocalScheduled(scheduleCopy)\n        }\n        else {\n            const newScheduleItem = {\n                hours: hours,\n                task: task\n            }\n            setLocalScheduled([...localScheduled, newScheduleItem])\n        }\n    }\n\n    const getScheduledTimeForTask = (task, scheduledTimes) => {\n        const scheduledObj = scheduledTimes.find(time => time.task === task)\n        return scheduledObj ? scheduledObj.hours : 0\n    }\n\n\n    return (<div>\n        <div className=\"container\">\n            <div className=\"schedule-container\">\n                <h1>Which tasks will you work on this week?</h1>\n\n                <TimeContext.Consumer>\n                    {({ scheduled, addScheduledTime, removeScheduledTime }) => (\n                        <div>\n                            <div className=\"save-btn\">\n                                <Button type=\"primary\" className=\"save-btn\" onClick={() => {\n                                    message.success(\"Saved task planning!\")\n                                    addScheduledTime(localScheduled)\n                                }}>Save Planning</Button>\n                            </div>\n\n                            {\n                                // scheduled.map(scheduleTime => (<div>\n                                //     <p>{scheduleTime.task}</p>\n                                //     <p>{scheduleTime.quarters} quarters.</p>\n                                //     <button onClick={() => removeScheduledTime({id: scheduleTime.id})}>Remove task from schedule</button>\n                                // </div>))\n                            }\n                            <div>\n                                {Object.keys(tasks).map(category => (\n                                    <div className=\"planner-container\">\n                                        <div className=\"category-name\" onClick={() => setHiddenState({ ...hiddenState, [category]: !hiddenState[category] })}>\n                                            <h3 >{category}</h3>\n                                            <div >\n                                                {hiddenState[category] ? <UpOutlined /> : <DownOutlined />}\n                                            </div>\n                                        </div>\n                                        { hiddenState[category] && (\n                                            <div>\n                                                <div className=\"schedule-task-container\">\n                                                    <span>\n                                                        <strong>Task</strong>\n                                                    </span>\n                                                    <span>\n                                                        <strong>Estimated Time (Hours)</strong>\n                                                    </span>\n                                                </div>\n                                                {tasks[category].map(task => (\n                                                    <TaskScheduleComponent addTime={onChangeSchedule} task={task} inputHours={getScheduledTimeForTask(task, [ ...localScheduled])} />\n                                                ))}\n                                            </div>)}\n                                        <Divider />\n\n                                    </div>\n                                ))}\n\n                            </div>\n\n                        </div>\n                    )}\n\n                </TimeContext.Consumer>\n            </div>\n            <div className=\"deliverables-container\">\n                <h1>Course deliverables</h1>\n                <Table dataSource={deliverables} columns={columns} />\n            </div>\n        </div>\n    </div >\n    );\n}\nexport default ScheduleComponent;","import { useD3 } from '../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction BarChart({ data }) {\n  const ref = useD3(\n    (svg) => {\n      const height = 500;\n      const width = 500;\n      const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.year))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.sales)])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n          d3\n            .axisBottom(x)\n            .tickValues(\n              d3\n                .ticks(...d3.extent(x.domain()), width / 40)\n                .filter((v) => x(v) !== undefined)\n            )\n            .tickSizeOuter(0)\n        );\n\n      const y1Axis = (g) =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .style(\"color\", \"steelblue\")\n          .call(d3.axisLeft(y1).ticks(null, \"s\"))\n          .call((g) => g.select(\".domain\").remove())\n          .call((g) =>\n            g\n              .append(\"text\")\n              .attr(\"x\", -margin.left)\n              .attr(\"y\", 10)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"start\")\n              .text(data.y1)\n          );\n\n      svg.select(\".x-axis\").call(xAxis);\n      svg.select(\".y-axis\").call(y1Axis);\n\n      svg\n        .select(\".plot-area\")\n        .attr(\"fill\", \"steelblue\")\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", (d) => x(d.year))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", (d) => y1(d.sales))\n        .attr(\"height\", (d) => y1(0) - y1(d.sales));\n    },\n    [data.length]\n  );\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\",\n      }}\n    >\n      <g className=\"plot-area\" />\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n  );\n}\n\nexport default BarChart;","import { useD3 } from '../hooks/useD3';\nimport React, { component, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport tasks from '../Data/tasks'\n\nconst transitionDuration = 900;\n\nconst SunburstComponent = ({widthHeightValue = 600, data}) => {\n\n\t  const margin = { top: 10, right: 0, bottom: 0, left: 0 };\n\t  const width = widthHeightValue - margin.left - margin.right - margin.top;\n    const height = widthHeightValue - margin.top - margin.bottom;\n\n    let d3Container = useRef(null);\n\n    useEffect (( ) => {\n    \t    if(data && d3Container.current) {\n\n\t\t\t    // constiables\n\t\t\t    const radius = Math.min(width, height) / 2 ;\n\t\t\t    const color = d3.scaleOrdinal([\"#232931\",\"#32505C\",\"#417B7D\",\"#67A890\",\"#A9D198\",\"#FFF5A5\"]);\n\n\t\t\t    // Create primary <g> element\n\t\t\t    d3.select(d3Container.current).selectAll('*').remove();\n\t\t\t    const svg = d3.select(d3Container.current)\n\t\t\t  \t\t\t.append(\"svg\")\n\t\t\t    \t\t.attr(\"width\", width)\n\t\t\t    \t\t.attr(\"height\", height);\n\n\t\t\t    const g = svg.append('g')\n\t\t\t        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\n\t\t\t    // Data strucure\n\t\t\t    const partition = d3.partition()\n\t\t\t        .size([2 * Math.PI, radius]);\n\n\t\t\t    // Find data root\n\t\t\t    const dataroot = d3.hierarchy(data)\n\t\t\t        .sum(function (d) { return d.value});\n\n\t\t\t    // size arcs\n\t\t\t    partition(dataroot);\n\t\t\t    const arc = d3.arc()\n\t\t\t        .startAngle(function (d) { return d.x0 })\n\t\t\t        .endAngle(function (d) { return d.x1 })\n\t\t\t        .innerRadius(function (d) { return d.y0 })\n\t\t\t        .outerRadius(function (d) { return d.y1 });\n\n     \t\t\tconsole.log(dataroot.descendants());\n\n\t\t\t    // Put it all together\n\t\t\t    g.selectAll('g')\n\t\t\t        .data(dataroot.descendants())\n\t\t\t        .enter().append('g').attr('class','node')\n\t\t\t        .append('path')\n\t\t\t        .attr(\"display\", function (d) { return d.depth ? null : \"none\"; })\n\t\t\t        .attr(\"d\", arc)\n\t\t\t        .style('stroke', '#fff')\n\t\t\t        .style(\"fill\", function (d) { return color((d.children ? d : d.parent).data.name); })\n\n\t\t\t        .on('mouseenter', function (d, i) {\n          \t\t\t\td3.select(this).transition()\n               \t\t\t\t.duration('50')\n               \t\t\t\t.attr('opacity', '.85');\n                  var name;\n                  var sum;\n                  console.log(i.data);\n                  if(i.data.children.length > 0) { sum = (i.data.children ? d3.sum(i.data.children, sum => sum.value): 0); name = i.data.name; }\n                  else { sum = i.data.value; name = i.parent.data.name; }\n                  d3.selectAll(\".center_text_title\").text(name)\n                        .style(\"font-size\", \"15px\")\n                        .style(\"font-weight\", 400);\n                  d3.selectAll(\".center_text\").text(sum / 4 + \"h\")\n                        .style(\"font-size\", \"30px\")\n                        .style(\"font-weight\", 750);\n     \t\t\t\t})\n\n     \t\t\t\t.on('mouseleave', function (d, i) {\n          \t\t\t\td3.select(this).transition()\n               \t\t\t\t.duration('50')\n               \t\t\t\t.attr('opacity', '1');\n                  d3.selectAll(\".center_text\").text(\"\");\n                  d3.selectAll(\".center_text_title\").text(\"\");\n    \t\t\t\t});\n\n\t\t\t    g.selectAll(\".node\")\n    \t\t\t\t.append(\"text\")\n    \t\t\t\t.attr(\"transform\", function(d) {\n        \t\t\t\treturn \"translate(\" + arc.centroid(d) + \")rotate(\" + computeTextRotation(d) + \")\"; })\n    \t\t\t\t.attr(\"dx\", \"0\")\n    \t\t\t\t.attr(\"dy\", \".5em\")\n    \t\t\t\t.style(\"text-anchor\", \"middle\")\n    \t\t\t\t.text(function(d) { return d.parent ? d.data.name : \"\" });\n\n          g.selectAll(\"g\")\n            .append(\"text\")\n            .attr('class', 'center_text')\n            .style(\"text-anchor\", \"middle\")\n            .attr('y', 20)\n            .text(\"\");\n\n          g.selectAll(\"g\")\n            .append(\"text\")\n            .attr('class', 'center_text_title')\n            .style(\"text-anchor\", \"middle\")\n            .attr('y', -20)\n            .text(\"\");\n\n    \t\t\tfunction computeTextRotation(d) {\n        \t\t\tconst angle = (d.x0 + d.x1) / Math.PI * 90;\n        \t\t\treturn (angle < 120 || angle > 270) ? angle : angle + 180;  // labels as rims\n    \t\t\t}\n    \t\t}\n    },[data, d3Container.current]);\n\n\n\n\n\treturn (\n  \t<div id=\"sunBurst\" ref={d3Container}>\n\n  \t</div>\n  );\n};\n\nexport default SunburstComponent;","import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\nconst LoadingBarComponent = ({ data, stacked = false, text }) => {\n    const width = 450\n    const height = 100;\n    const margin = { left: 10, right: 10, top: 10, bottom: 10 }\n    const [smallerName, setSmallerName] = useState('')\n    const [largerName, setLargerName] = useState('')\n\n    let propData = [{ type: \"Planned\", quarters: 10 }, { type: \"Reported\", quarters: 8 }]\n    let loadingBarContainer = useRef(null);\n\n    //render the chart\n    //we use useffect and ref to make d3 work\n    useEffect(() => {\n        //avoid null pointers\n        if (data && loadingBarContainer.current) {\n            const scheduledData = data.scheduled;\n            const reportedData = data.reported\n\n            d3.select(loadingBarContainer.current).selectAll('*').remove()\n\n            const svg = d3.select(loadingBarContainer.current)\n                .append('svg')\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append('g')\n                .attr(\"transform\", `translate(${margin.left}, 0)`)\n            \n\n            const scale = d3.scaleLinear()\n                .domain([0, d3.max([scheduledData, reportedData])]).nice()\n                .range([0, width - margin.right - margin.left])\n\n            console.log(scale(scale.domain()[1]))\n            console.log('drawing larger bar')\n            const backgroundBar = svg\n                .data([scheduledData])\n                .append('rect')\n                .attr(\"class\", \"background-rect\")\n                .attr('x', scale(0))\n                .attr('y', margin.top)\n                .attr('height', height -  2 * margin.bottom - margin.top)\n                .attr('width', d => scale(d))\n                .style('fill', '#232931')\n\n            const smallerBar = svg.selectAll(null)\n                .data([reportedData])\n                .enter()\n                .append('rect')\n                .attr('x', scale(0))\n                .attr('y', margin.top)\n                .attr('height', height - 2*margin.bottom - margin.top)\n                .attr('width', d => scale(d))\n                .style('fill', '#A9D198')\n\n            console.log(scale(reportedData))\n            const axis = d3.axisBottom(scale)\n            console.log(scale.ticks().map(t => t/4))\n            axis.tickFormat(t => t % 4 == 0 ? t / 4 : \"\" )\n            \n            const drawnLine = svg.append('line')\n            .attr('x1', scale(scheduledData))\n            .attr('x2', scale(scheduledData))\n            .attr('y1', height - 2 * margin.bottom)\n            .attr('y2', margin.top)\n            .attr('stroke', () => scheduledData > reportedData ? 'red' : 'green')\n            .attr('stroke-width', 2)\n\n            const drawnAxis = svg.append('g')\n            .attr('transform', `translate(${0}, ${height -  2* margin.bottom})`)\n            .call(axis)\n\n        }\n    }, [loadingBarContainer.current]);\n\n    return (\n        <div>\n            <div className=\"loadingBar\" ref={loadingBarContainer}>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default LoadingBarComponent;","import { getDefaultNormalizer } from '@testing-library/react';\nimport React, { useState } from 'react';\nimport { TimeContext } from '../Contexts/TimeContext';\nimport BarChart from './BarChart';\nimport SunBurst from './SunburstComponent';\nimport LoadingBar from './LoadingBarComponent';\nimport './VizView.css'\nimport { Divider } from 'antd';\n\nconst VizComponent = () => {\n    return (\n        <div>\n            <h1>Visualizations</h1>\n            <TimeContext.Consumer>\n                {({ scheduled, reported, getReportedTimesBasedOnTask, getCategoryGroupedTaskTimes, getTaskBasedScheduledAndReported }) => (\n                    <>\n                        {(scheduled.length > 0 && reported.length > 0) ? (\n                            <div className=\"viz-container\">\n                                \n                                <div className=\"pie-container\">\n                                    <h2>Task Distribution</h2>\n                                    <SunBurst data={getCategoryGroupedTaskTimes()} widthHeightValue={400} />\n                                </div>\n                                <div className=\"loading-container\">\n                                    <h2>Time worked (hours)</h2>\n                                    {getTaskBasedScheduledAndReported().map(report => (\n                                        <>\n                                        <p><strong>\n                                            {report.task}\n                                            </strong></p>\n                                        <LoadingBar data={report}/>\n                                        <Divider/>\n                                        </>\n                                    ))}\n                                </div>\n\n                            </div>)\n                            : (\n                                <p>You need to schedule and report work to see charts!</p>\n                            )}\n                    </>\n                )}\n            </TimeContext.Consumer>\n        </div>\n    )\n}\n\nexport default VizComponent;","import React, { useState } from 'react';\nimport { SmileOutlined, MehOutlined, FrownOutlined } from '@ant-design/icons';\nimport './likert-component.css';\nimport { color } from 'd3';\n\nconst LikertScaleComponent = ({ onChange, question, score }) => {\n    const [selected, setSelected] = useState(score);\n    return (\n        <div className=\"likert-container\">\n            <h3>{question}</h3>\n            <div className=\"emoji-container\">\n                <FrownOutlined style={{ fontSize: \"2rem\",  color:selected === -1 ? \"#005ccc\": \"#000\"}} onClick={() => {\n                    onChange(-1)\n                    setSelected(-1)}}/>\n                <MehOutlined style={{ fontSize: \"2rem\" , color:selected === 0 ? \"#005ccc\": \"#000\"}}  onClick={() => {\n                    onChange(0)\n                    setSelected(0)}}/>\n                <SmileOutlined style={{ fontSize: \"2rem\", color:selected === 1 ? \"#005ccc\": \"#000\"}}  onClick={() => {\n                    onChange(1)\n                    setSelected(1)}}/>\n            </div>\n        </div>\n    )\n}\n\nexport default LikertScaleComponent;","import React, { useContext, useEffect, useState } from 'react';\nimport { TimeContext } from '../Contexts/TimeContext';\nimport { Button, Calendar, Modal, message } from 'antd';\nimport { TimePicker, TreeSelect, Menu, Divider } from 'antd';\nimport tasks from '../Data/tasks';\nimport moment from 'moment';\nimport { TreeNode } from 'antd/lib/tree-select';\nimport { Prompt } from 'react-router-dom'\nimport LikertScale from './likert-component';\n\nimport './ReportComponent.css'\nconst { RangePicker } = TimePicker;\nconst { SubMenu } = Menu;\nconst format = \"HH:mm\";\n\nconst DropdownMenu = ({ onTreeChange, value }) => (\n    <TreeSelect style={{ width: \"100%\" }} onChange={value => onTreeChange(value)} value={value}>\n        {Object.keys(tasks).map(cat => (\n            <TreeNode value={cat} title={cat} selectable={false}>\n                {tasks[cat].map(task => (\n                    <TreeNode value={task} title={task} />\n                ))}\n            </TreeNode>\n        ))}\n    </TreeSelect>\n)\n\nconst ReportComponent = () => {\n    const [showModal, setShowModal] = useState(false)\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [reports, setReports] = useState([])\n    const [rollingIdx, setRollingIdx] = useState(0);\n    const { reported, addReportedTime } = useContext(TimeContext);\n    const onDateSelect = (date) => {\n        setSelectedDate(date.toDate())\n        setShowModal(true);\n    }\n\n    useEffect(() => {\n        const reportedWithId = reported.map((report, idx) => ({ ...report, id: idx }))\n        setRollingIdx(reported.length);\n        setReports(reportedWithId);\n    }, [reported])\n\n    const onOk = () => {\n        addReportedTime(reports);\n        message.success(\"Report was saved!\")\n        setReports([])\n        setShowModal(false)\n    }\n\n    const onCancel = () => {\n        setShowModal(false)\n    }\n\n    const changeTaskTime = (id, startTime, endTime) => {\n        const idx = reports.findIndex(report => report.id === id);\n        const newReport = {\n            ...reports[idx],\n            startTime,\n            endTime\n        }\n        let reportCopy = [...reports]\n        reportCopy[idx] = newReport\n        setReports(reportCopy)\n    }\n\n    const changeReportTask = (id, task) => {\n        const idx = reports.findIndex(report => report.id === id);\n        const newReport = {\n            ...reports[idx],\n            task: task\n        }\n        let reportCopy = [...reports]\n        reportCopy[idx] = newReport\n        setReports(reportCopy)\n    }\n\n    const changeReportReflection = (id, score) => {\n        const idx = reports.findIndex(report => report.id === id);\n        const newReport = {\n            ...reports[idx],\n            score\n        }\n        let reportCopy = [...reports]\n        reportCopy[idx] = newReport\n        setReports(reportCopy)\n    }\n\n    const getReportsFordate = (reports, date) => {\n        const momentDate = moment(date)\n        let reportsForDate = reports.filter(report => (report.startTime === null) || (moment(report.startTime).isSame(momentDate, 'day')))\n\n        // if(reportsForDate.length === 0){\n        //     const newReport = {id: rollingIdx+1, startTime: date, endTime: date}\n        //     setReports([...reports, newReport])\n        //     setRollingIdx(rollingIdx+1)\n        //     reportsForDate = [newReport]\n        // }\n        return reportsForDate;\n    }\n\n    const onAddTask = (date) => {\n        setReports([...reports, { id: rollingIdx + 1, startTime: date, endTime: date }])\n        setRollingIdx(rollingIdx + 1);\n    }\n\n    const dateCellRender = (value) => {\n        const reportsForDate = getReportsFordate([...reports], value.toDate());\n        reportsForDate.sort((a, b) => a.startTime - b.startTime)\n        //if i sort in a lambda i won't need to write documentation, yeehaw!\n        return (<ul className=\"events\">\n            {reportsForDate.map(report => <li >\n                <div style={{ display: \"block\", backgroundColor: \"green\", color: \"white\", marginBottom: \"0.05rem\", borderRadius: \"5%\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\n                    {`${moment(report.startTime).format(\"HH:mm\")}: ${report.task}`}\n                </div>\n                {/* <Badge text={`${moment(report.startTime).format(\"HH:mm\")}: ${report.task}`} status={'success'}/> */}\n            </li>)}\n        </ul>\n        )\n    }\n\n    return (<div className=\"report-component-container\">\n        <div className=\"calendar-container\">\n            <h1>Time reporting</h1>\n            <h3>Report your worked time here.</h3>\n            <TimeContext.Consumer>\n                {({ reported, addReportedTime }) => (<>\n                    <Calendar onSelect={onDateSelect} dateCellRender={dateCellRender} />\n                    <Modal visible={showModal}\n                        onCancel={onCancel}\n                        onOk={onOk}\n                    >\n                        <h2>{selectedDate.toLocaleDateString()}</h2>\n                        {getReportsFordate([...reports], selectedDate).map(report => (\n                            <>\n                                <RangePicker format={format} style={{ width: \"100%\" }} onChange={(dates, garbage) => changeTaskTime(report.id, dates[0].toDate(), dates[1].toDate())}\n                                    value={[moment(report.startTime), moment(report.endTime)]} />\n                                <DropdownMenu onTreeChange={value => changeReportTask(report.id, value)} value={report.task} />\n                                <Divider />\n                                <LikertScale question={\"How did it go?\"} onChange={(score) => changeReportReflection(report.id, score )} score={report.score}/>\n                                <Divider />\n                            </>\n                        ))\n                        }\n                        <Button onClick={() => onAddTask(selectedDate)}>Add task</Button>\n                    </Modal>\n                </>\n                )}\n            </TimeContext.Consumer>\n        </div>\n        <Divider type=\"vertical\" className=\"vert-divider\" />\n        <div className=\"report-info\">\n            <h1>How to use:</h1>\n            <ul>\n                <li>\n                    Click on a date in the calendar\n                    </li>\n                <li>\n                    Report what times you worked on different learning tasks\n                    </li>\n                <li>\n                    Click \"Ok\" to save your report\n                    </li>\n            </ul>\n        </div>\n    </div >\n    );\n}\nexport default ReportComponent;","import logo from './logo.svg';\nimport TimeProvider from './Contexts/TimeContext';\nimport './App.css';\nimport ScheduleComponent from './Components/ScheduleComponent';\nimport VizComponent from './Components/VizView';\nimport ReportComponent from './Components/ReportComponent';\nimport { Menu } from 'antd';\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <Router basename=\"/\">\n      <TimeProvider>\n        <div className=\"App\">\n          <div className=\"app-container\">\n            <div className=\"sidebar\">\n              <h1>Time reporter</h1>\n              <Menu mode=\"inline\"\n              defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\">\n                  <Link to={\"/schedule\"}>Plan work</Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to={\"/report\"}>Report time worked</Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to={\"/viz\"}>Visualizations</Link>\n                </Menu.Item>\n              </Menu>\n              {/* <nav>\n                <ul>\n                  <li>\n\n                  </li>\n                  <li>\n\n                  </li>\n                  <li>\n\n                  </li>\n                  <li>\n\n                  </li>\n                </ul>\n              </nav> */}\n            </div>\n            <div className=\"main-content\">\n              <Switch>\n                <Route path={\"/schedule\"}>\n                  <ScheduleComponent />\n                </Route>\n                <Route path={\"/viz\"}>\n                  <VizComponent />\n                </Route>\n                <Route path={\"/report\"}>\n                  <ReportComponent />\n                </Route>\n                <Route path={\"/\"}>\n                  <ScheduleComponent /> {/*If we create a landing page, this should lead there*/}\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </TimeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}